# Configuration file of FAR training experiment

# ========== Cluster configuration ========== 
# ip address of the parameter server (need 1 GPU process)
ps_ip: 10.30.74.7

# ip address of each worker:# of available gpus process on each gpu in this node
# Note that if we collocate ps and worker on same GPU, then we need to decrease this number of available processes on that GPU by 1
# E.g., master node has 4 available processes, then 1 for the ps, and worker should be set to: worker:3
worker_ips: 
    - 10.30.74.11:[1]
    # - 10.30.74.102:[4]
    # - 10.30.74.103:[4]
    # - 10.30.74.104:[4]
    # - 10.30.74.105:[4]
    # - 10.30.74.106:[4]
    # - 10.30.74.107:[4]
    # - 10.30.74.108:[4]
    # - 10.30.74.109:[4]
    # - 10.30.74.110:[4]
    # - 10.30.74.111:[4]
    # - 10.30.74.112:[4]
    # - 10.30.74.113:[4]
    # - 10.30.74.114:[4]
    # - 10.30.74.115:[4]
    # - 10.30.74.116:[4]
    # - 10.30.74.117:[4]
    # - 10.30.74.118:[4]
    # - 10.30.74.119:[4]
    # - 10.30.74.120:[4]
    # - 10.30.74.121:[4]
    # - 10.30.74.122:[4]
    # - 10.30.74.123:[4]
    # - 10.30.74.124:[4]
    # - 10.30.74.125:[4]

exp_path: /home/ubuntu/FedScale/core

# Entry function of executor and aggregator under $exp_path
executor_entry: executor.py

aggregator_entry: aggregator.py

auth:
    ssh_user: ubuntu
    ssh_private_key: ~/.ssh/id_rsa

# cmd to run before we can indeed run FAR (in order)
setup_commands:
    - source /home/ubuntu/anaconda3/bin/activate fedscale
    - export GLOO_SOCKET_IFNAME='eth0'         # Run "ifconfig" to ensure the right NIC for nccl if you have multiple NICs

# ========== Additional job configuration ========== 
# Default parameters are specified in argParser.py, wherein more description of the parameter can be found

job_conf: 
    - job_name: femnist                   # Generate logs under this folder: log_path/job_name/time_stamp
    - log_path: /home/ubuntu/FedScale/core/evals # Path of log files
    - total_worker: 1                    # Number of participants per round, we use K=100 in our paper, large K will be much slower
    - data_set: femnist                   # Dataset: openImg, google_speech, stackoverflow
    - data_dir: /home/ubuntu/FedScale/dataset/data/femnist    # Path of the dataset
    - data_map_file: /home/ubuntu/FedScale/dataset/data/femnist/client_data_mapping/train.csv              # Allocation of data to each client, turn to iid setting if not provided
    # - device_conf_file: /home/ubuntu/FedScale/dataset/data/device_info/client_device_capacity     # Path of the client trace
    # - device_avail_file: /home/ubuntu/FedScale/dataset/data/device_info/client_behave_trace
    - model: customFemnist                            # Models: e.g., shufflenet_v2_x2_0, mobilenet_v2, resnet34, albert-base-v2
    - gradient_policy: yogi                 # {"fed-yogi", "fed-prox", "fed-avg"}, "fed-avg" by default
    - eval_interval: 10                     # How many rounds to run a testing on the testing set
    - epochs: 2                          # Number of rounds to run this training. We use 1000 in our paper, while it may converge w/ ~400 rounds
    - filter_less: 21                       # Remove clients w/ less than 21 samples
    - num_loaders: 2
    - yogi_eta: 3e-3 
    - yogi_tau: 1e-8
    - local_steps: 30
    - learning_rate: 0.05
    - batch_size: 20
    - test_bsz: 20
    - malicious_factor: 4
